import Head from 'next/head';
import { useRouter } from 'next/router';
import {
  Box,
  Callout,
  Icon,
  Text,
  useColorModeValue,
} from '@interchain-ui/react';
import { useMemo } from 'react';

import { Header } from './Header';
import { Footer } from './Footer';
import { Sidebar } from './Sidebar';
import { useDisclosure, useAddHyperwebChain, useStarshipChains } from '@/hooks';
import styles from '@/styles/layout.module.css';
import { Button } from './Button';
import { ROUTES } from './Sidebar';

export function Layout({ children }: { children: React.ReactNode }) {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const { isLoading } = useStarshipChains();
  const { isHyperwebAdded, refetchAndAddChain } = useAddHyperwebChain();
  const router = useRouter();

  const showNotAddedWarning = !isLoading && !isHyperwebAdded;

  const notRunningWarning = (
    <Callout
      title="Hyperweb is not running"
      attributes={{
        maxWidth: '400px',
        position: 'absolute',
        top: '20px',
        left: '50%',
        transform: 'translateX(-50%)',
        display: showNotAddedWarning ? 'block' : 'none',
      }}
      iconRender={<Icon name="errorWarningLine" size="$xl" />}
      intent="error"
    >
      <Box display="flex" alignItems="center" gap="$4">
        <Text>Please run `yarn starship start` and try again.</Text>
        <Button
          variant="text"
          size="sm"
          color="$text"
          textDecoration="underline"
          height="$min"
          px="0"
          py="0"
          onClick={refetchAndAddChain}
        >
          Refresh
        </Button>
      </Box>
    </Callout>
  );

  const renderContent = useMemo(() => {
    if (router.pathname === ROUTES.HOME)
      return (
        <>
          {notRunningWarning}
          {children}
        </>
      );
    if (router.pathname === ROUTES.DOCS || isHyperwebAdded) return children;
    return notRunningWarning;
  }, [router.pathname, isHyperwebAdded, notRunningWarning, children]);

  return (
    <Box
      backgroundColor={useColorModeValue('$white', '$background')}
      className={styles.layout}
    >
      <Box maxWidth="1440px" width="$full" mx="$auto" display="flex">
        <Head>
          <title>Create Hyperweb App</title>
          <meta name="description" content="Generated by create hyperweb app" />
          <link rel="icon" href="/images/favicon.ico" />
        </Head>
        <Sidebar isOpen={isOpen} onClose={onClose} />
        <Box
          p="30px"
          width="$full"
          minHeight="100vh"
          display="flex"
          flexDirection="column"
        >
          <Header onOpenSidebar={onOpen} />
          <Box flex="1" position="relative">
            {renderContent}
          </Box>
          <Footer />
        </Box>
      </Box>
    </Box>
  );
}
